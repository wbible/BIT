package thread;

import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.Date;

import javax.swing.JOptionPane;

public class Racer extends Canvas implements Runnable{
	private String name;
	private Image img;
	private int x, y;
	private static Date startTime;
	public static int rank;
	public static String result;
	private int finish;
	private long timeDiff;
	
	public Racer(String name, int finish) {
//		setBackground(new Color((int)(Math.random()*256), (int)(Math.random()*256),(int)(Math.random()*256)));
		this.name = name;
		this.finish = finish;
		img = Toolkit.getDefaultToolkit().getImage("horse.gif");
	}
	
	static {
		result = "";
		if (startTime == null) startTime = new Date();
	}
	
	@Override
	public void paint(Graphics g) {
		g.drawLine(0, getHeight()/2, getWidth(), getHeight()/2);
		g.drawImage(img, x, y, 50, this.getHeight(), this);
	}

	@Override
	public void run() {
		for(int i = 0; i < getWidth()+10; i += (int)(Math.random()*10)) {
			x = i;
			try {
				Thread.sleep(50);
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
//		repaint();
//		date = new Date(); // 종료 시간
		System.out.println(++rank + "등마 : " + name);
		timeDiff = (new Date().getTime() - startTime.getTime());
		System.out.println(timeDiff);
		result += rank + "등 : " + name + "(" + timeDiff/(1000*60) + "분 " + (int)(timeDiff%(1000*60)/1000) + "초)\n";
		if(rank == finish) {
			System.out.println("경기가 끝났습니다.");
			JOptionPane.showMessageDialog(this, result);
		}
		
	}

	public String getName() {
		return name;
	}

}
